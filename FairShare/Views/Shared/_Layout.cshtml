@inject Microsoft.Extensions.Configuration.IConfiguration Config
@inject Microsoft.AspNetCore.Identity.UserManager<FairShare.Models.ApplicationUser> UserManager
@{
    string? defaultTheme = (Config["Ui:DefaultTheme"] ?? "auto").ToLowerInvariant();
    defaultTheme = (defaultTheme == "light" || defaultTheme == "dark") ? defaultTheme : "auto";
    
    // Get display name for authenticated users
    string? displayName = null;
    if (User.Identity?.IsAuthenticated ?? false)
    {
        ApplicationUser? currentUser = await UserManager.GetUserAsync(User);
        displayName = currentUser?.DisplayName ?? User.Identity?.Name;
    }
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>FairShare - @ViewData["Title"]</title>
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
          crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <script>
        (function () {
          const storageKey = 'fs-theme';
          const defaultTheme = '@defaultTheme';
          const getPreferred = () => {
            const saved = localStorage.getItem(storageKey);

            if (saved === 'light' || saved === 'dark' || saved === 'auto') return saved;

            return defaultTheme;
          };
          const apply = (mode) => {
            const m = (mode === 'light' || mode === 'dark')
              ? mode
              : (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');

            document.documentElement.setAttribute('data-bs-theme', m);
          };
          apply(getPreferred());
          window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
            const saved = localStorage.getItem(storageKey) || defaultTheme;

            if (saved === 'auto') apply('auto');
          });
          window.__fsTheme = { storageKey, apply, getPreferred };
        })();
    </script>
    @RenderSection("Styles", required: false)
</head>
<body>
    <header class="border-bottom mb-4">
        <nav class="navbar navbar-expand-lg bg-body-tertiary border-bottom">
            <div class="container">
                <a class="navbar-brand d-flex align-items-center gap-2" asp-controller="Home" asp-action="Index">‚öñÔ∏è FairShare</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav" aria-controls="mainNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="mainNav">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link" asp-controller="ParentProfiles" asp-action="Index">Parents</a>
                        </li>
                    </ul>
                    <ul class="navbar-nav ms-auto align-items-center">
                        @if (User.Identity?.IsAuthenticated ?? false)
                        {
                            @if (User.HasClaim("guest","true"))
                            {
                                <li class="nav-item">
                                    <span class="nav-link text-muted" title="Guest mode: limited functionality">
                                        <small>Guest</small>
                                    </span>
                                </li>
                            }
                            else
                            {
                                @if (!string.IsNullOrEmpty(displayName))
                                {
                                    <li class="nav-item">
                                        <span class="nav-link text-muted">
                                            <small>Logged in as <strong>@displayName</strong></small>
                                        </span>
                                    </li>
                                }

                                <li class="nav-item">
                                    <a class="nav-link" asp-controller="Settings" asp-action="Index" title="Settings">
                                        <i class="bi bi-gear"></i>
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <button id="theme-toggle" class="btn btn-link nav-link" type="button" title="Toggle theme">
                                        <span id="theme-toggle-icon">üåô</span>
                                    </button>
                                </li>
                            }

                            <li class="nav-item">
                                <form method="post" asp-controller="Account" asp-action="Logout">
                                    <button class="btn btn-link nav-link">Logout</button>
                                </form>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <button id="theme-toggle" class="btn btn-link nav-link" type="button" title="Toggle theme">
                                    <span id="theme-toggle-icon">üåô</span>
                                </button>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link"
                                   asp-controller="Account"
                                   asp-action="Guest"
                                   title="Guest mode disables saving, settings, and user management.">
                                    Guest
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main class="container my-4">
        @RenderBody()
    </main>

    <footer class="container small text-muted py-4">
        &copy; @DateTime.UtcNow.Year - FairShare -
        <span id="contact-email"></span>
    </footer>
    <script>
        // Obfuscate and display email address to reduce spam bot harvesting
        (function() {
            var user = "jmykitta";
            var domain = "theguywiththedogs";
            var tld = "dev";
            var email = user + "@" + domain + "." + tld;
            var span = document.getElementById("contact-email");
            if (span) {
                span.textContent = email;
            }
        })();
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    <script>
        (function () {
          const btn = document.getElementById('theme-toggle');
          const icon = document.getElementById('theme-toggle-icon');

          if (!btn || !icon || !window.__fsTheme) return;

          const { storageKey, apply, getPreferred } = window.__fsTheme;

          const setIcon = () => {
            const mode = document.documentElement.getAttribute('data-bs-theme');
            icon.textContent = (mode === 'dark') ? '‚òÄÔ∏è' : 'üåô';
            btn.setAttribute('title', (mode === 'dark') ? 'Switch to light mode' : 'Switch to dark mode');
          };

          const cycle = () => {
            const order = ['light', 'dark', 'auto'];
            const current = localStorage.getItem(storageKey) || getPreferred();
            const idx = order.indexOf(current);
            const next = order[(idx + 1) % order.length];
            localStorage.setItem(storageKey, next);
            apply(next);
            setIcon();
          };

          setIcon();
          btn.addEventListener('click', cycle);
        })();
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>
